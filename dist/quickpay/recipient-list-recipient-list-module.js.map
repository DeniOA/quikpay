{"version":3,"sources":["webpack:///./src/app/recipient-list/recipient-list.component.html","webpack:///./src/app/recipient-list/recipient-list.component.ts","webpack:///./src/app/recipient-list/recipient-list.module.ts","webpack:///./src/app/recipient-list/recipient-routing.module.ts"],"names":[],"mappings":"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","file":"recipient-list-recipient-list-module.js","sourcesContent":["module.exports = \"<div class=\\\"header  pb-8 pt-5 pt-md-8\\\">\\n  <div class=\\\"container\\\">\\n    <span class=\\\"\\\"></span>\\n    <div class=\\\"container-fluid d-flex align-items-right\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12 order-xl-1\\\">\\n          <div class=\\\"card \\\">\\n            <div class=\\\"card-header bg-white border-0\\\">\\n              <div class=\\\"row align-items-center\\\">\\n                <div class=\\\"col-8\\\">\\n                  <h3 class=\\\"mb-0\\\">Initiate Transfer</h3>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <form\\n                #transferForm=\\\"ngForm\\\"\\n                (ngSubmit)=\\\"initiateTransfer(transferForm.form, longContent)\\\"\\n              >\\n                <div class=\\\"pl-lg-4\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"source\\\" class=\\\"form-control-label\\\"\\n                          >Transfer From</label\\n                        >\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"type\\\"\\n                          name=\\\"source\\\"\\n                          required\\n                          #nameField=\\\"ngModel\\\"\\n                          ngModel\\n                        >\\n                          <option value=\\\"balance\\\">Balance</option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-lg-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"name\\\"\\n                          >Amount</label\\n                        >\\n                        <input\\n                          type=\\\"number\\\"\\n                          id=\\\"amount\\\"\\n                          name=\\\"amount\\\"\\n                          class=\\\"form-control form-control-alternative\\\"\\n                          placeholder=\\\"amount in kobo\\\"\\n                          ngModel\\n                          #nameField=\\\"ngModel\\\"\\n                          required\\n                        />\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"name\\\"\\n                          >Account Number</label\\n                        >\\n                        <input\\n                          type=\\\"text\\\"\\n                          id=\\\"account_number\\\"\\n                          name=\\\"account_number\\\"\\n                          class=\\\"form-control form-control-alternative\\\"\\n                          value=\\\"{{ number }}\\\"\\n                          placeholder=\\\"\\\"\\n                          ngModel\\n                          #nameField=\\\"ngModel\\\"\\n                          required\\n                        />\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"name\\\"\\n                          >Bank</label\\n                        >\\n                        <input\\n                          type=\\\"text\\\"\\n                          id=\\\"bank_code\\\"\\n                          name=\\\"bank_code\\\"\\n                          class=\\\"form-control form-control-alternative\\\"\\n                          value=\\\"{{ name }}\\\"\\n                          placeholder=\\\"\\\"\\n                          ngModel\\n                          #nameField=\\\"ngModel\\\"\\n                          required\\n                        />\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-12\\\">\\n                      <label for=\\\"recipient\\\" class=\\\"form-control-label\\\"\\n                        >Choose Recipient</label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"recipient\\\"\\n                        #t\\n                        (change)=\\\"selectedRecipient(t.value, transferForm.form)\\\"\\n                        name=\\\"recipient\\\"\\n                        ngModel\\n                        #nameField=\\\"ngModel\\\"\\n                        required\\n                      >\\n                        <option\\n                          *ngFor=\\\"let code of recipient\\\"\\n                          value=\\\"{{ code.recipient_code }}\\\"\\n                          >{{ code.name }}</option\\n                        >\\n                      </select>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"currency\\\"\\n                          >NGN</label\\n                        >\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"currency\\\"\\n                          name=\\\"currency\\\"\\n                          required\\n                          #nameField=\\\"ngModel\\\"\\n                          ngModel\\n                        >\\n                          <option value=\\\"NGN\\\">NGN</option>\\n                        </select>\\n                      </div>\\n                    </div>\\n\\n                    <hr class=\\\"my-4\\\" />\\n                    <div class=\\\"col-lg-2 col-md-4\\\">\\n                      <button\\n                        type=\\\"submit\\\"\\n                        class=\\\"btn btn-block btn-info\\\"\\n                        (click)=\\\"openBackDropCustomClass(longContent)\\\"\\n                      >\\n                        Transfer\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <ng-template #longContent let-modal>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Modal title</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modal.dismiss('Cross click')\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Please Confirm Transaction details</h5>\\n          </div>\\n          <ul class=\\\"list-group list-group-flush\\\">\\n            <li class=\\\"list-group-item\\\">\\n              Transfer to: {{ recipient[index].name }}\\n            </li>\\n            <li class=\\\"list-group-item\\\">Amount: {{ modalData.amount }}</li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <ng-container>\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\" (click)=\\\"sayHello()\\\">\\n                <button\\n                  (click)=\\\"transferNow()\\\"\\n                  class=\\\"btn btn-danger m-3\\\"\\n                  [class]=\\\"'btn btn-primary btn-lg'\\\"\\n                >\\n                  Confirm Transfer\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-light\\\"\\n          (click)=\\\"modal.close('Close click')\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </ng-template>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, NgModel} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport {  transferService } from '../transfer/services/transfer.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-recipient-list',\n  templateUrl: './recipient-list.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    .light-blue-backdrop {\n      background-color: #5cb3fd;\n    }\n  `]\n})\nexport class RecipientListComponent implements OnInit {\n\n  index;\n  transfer;\n  value;\n  number;\n  bank;\n  \n  public banks: any[];\n  public recipient: any[];\n  public paystackAmount: number;\n  public showPaystack: boolean = false;\n  public showModal: boolean = false;\n  amount: number;\n\n  tRef = '';\n  result = '';\n\n  modalData;\n  name: any;\n  form: NgForm;\n\n  constructor( http: HttpClient, private _transferService: transferService, private router: Router,private route: ActivatedRoute, private modalService: NgbModal ) {\n\n    let headers = new HttpHeaders()\n    headers = headers.set('Authorization', 'Bearer sk_test_3df29e03db0a01e75e4026512cd51acd671f3b38')\n\n    http.get<any[]>('https://api.paystack.co/transferrecipient', {headers: headers}).subscribe(\n      (data: any) => {\n        this.recipient = data.data;\n       console.log(this.recipient);\n        return this.recipient;\n      }\n  );\n\n  http.get<any[]>('https://api.paystack.co/bank').subscribe(\n    (data: any) => {\n      this.banks = data.data;\n     console.log(this.banks);\n      return this.banks;\n    }\n);\n\n   }\n\n   initiateTransfer(transferForm: NgForm, longContent){\n    console.log(transferForm.value);\n\n    this.modalData = transferForm.value;\n\n    this.transfer = {\n      source: transferForm.value.source,\n     amount: transferForm.value.amount,\n      recipient: transferForm.value.recipient,\n      account_number: this.number,\n      bank_code: this.bank,\n      currency: transferForm.value.currency\n    };\n\n    this.form = transferForm;\n    this.openBackDropCustomClass(longContent);\n\n    console.log(this.recipient);\n  \n  }\n      transferNow(){\n        this._transferService.transferRecipient(this.transfer).subscribe(() => {\n          this.paystackAmount = (Number(this.transfer.amount)*100);\n          this.tRef = ''+Math.floor((Math.random() * 1000000000) + 1);\n          \n          this.showPaystack = true;\n         \n          alert(\"The form was submitted\");\n          this.form.reset();\n        });\n      }\n\n\n  openBackDropCustomClass(longContent) {\n    this.modalService.open(longContent, {backdropClass: 'light-blue-backdrop'});\n  }\n\n  sayHello() {\n    alert('success. transaction ref is ' + this.tRef);\n  }\n\n  \n\n  paymentCancel() {\n    console.log('No payment times.');\n    alert('Sorry, Payment failed ');\n  }\n\n  paymentDone(paymentData) {\n    console.log('Payment Done');\n\n    console.log\n  \n      alert('Thank you!! Payment was Successful ');\n    this.showPaystack = false;\n  \n  }\n\n  selectedRecipient(value, transferForm:NgForm){\n    console.log(value);\n    this.index = this.recipient.findIndex(item=>item.recipient_code===transferForm.value.recipient);\n    console.log(this.index);\n    this.bank= this.recipient[this.index].details.bank_code;\n    this.name= this.recipient[this.index].details.bank_name;\n    \n    this.number= this.recipient[this.index].details.account_number;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RecipientRoutingModule } from './recipient-routing.module';\nimport { RecipientListComponent } from './recipient-list.component';\nimport { transferService } from '../transfer/services/transfer.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Angular4PaystackModule } from 'angular4-paystack';\n\n\n@NgModule({\n  declarations: [\n    RecipientListComponent\n  ],\n  imports: [\n    CommonModule,\n    RecipientRoutingModule,\n    NgbModule,\n    FormsModule,\n    Angular4PaystackModule\n    \n  ],\n  providers: [transferService]\n})\nexport class RecipientListModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\nimport { RecipientListComponent } from './recipient-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'recipient-list',\n    component: RecipientListComponent,\n    data: {\n      title: 'Transfer'\n    },\n  },\n];\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class RecipientRoutingModule { \n\n\n\n\n}\n"],"sourceRoot":""}